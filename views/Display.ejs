<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<style>
  body {
  margin: 0;
  font-family: 'Courier New', Courier, monospace;
}

.main-container {
  display: flex;
  flex-direction: column;
  width: 100vw;
  height: 100vh;
  /* background-color: #f5f5f5; */
}

/* Header */
header {
  background-color: #587ef4;
  color: #fff;
  padding: 1rem 2rem;
  text-align: center;
}

h1 {
  font-size: 2rem;
  margin: 0;
}

/* Main Content */
main {
  display: flex;
  flex-grow: 1;
  padding: 1rem;
}

/* Graph Side */
.graph-side {
  /* border: 2px solid red; */
  margin-top: -1rem;
  flex: 1;
  /* background-color: #f0f0f0; */
  border-radius: 5px;
  padding: 1rem;
}

/* Info Side */
.info-side {
  flex: 1;
  display: flex;
  flex-direction: column;
  background-color: #fff;
  border-radius: 5px;
  padding: 1rem;
}

/* Title Section */
.title-section {
  margin-bottom: 1rem;
}

/* Filter Section */
.filter-section {
  display: flex; /* Use flexbox for even spacing */
  justify-content:center; /* Distribute buttons evenly */
  margin-top: 1.2rem;
}

.filter-button {
  background-color: #587ef4;
  margin-left: 2rem;
  color: #fff;
  border: none;
  padding: 1rem 2.8rem; /* Adjust padding for larger text */
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out;
  font-weight: bold; /* Add boldness for emphasis */
}

.filter-button:hover {
  background-color: #4169e1;
}
.History{
    /* border: 2px solid red; */
    margin-top: 2rem;
    height: 100%;
}
.endsection-leftside{
  width: 50%;
  height: 10rem;
  border:2px solid red;
}
</style>
<body>
    <div class="main-container">
        <header class="top-section">
            <h1>Expense Tracker</h1>
        </header>

        <main class="middle-section">
            <section class="graph-side">
                <canvas id="data" width="400" height="250"></canvas>
            </section>

            <section class="info-side">
                <div class="title-section">
                    <h1>Transactions:-</h1>
                      <div class="Expense_values">
                        <span id="Money_Expense:"> </span>
                        <span id="saved">:</span>
                      </div>
                </div>

                
                <div class="History">
                    <h1>History</h1>
                </div>
            </section>
        </main>
          
    </div>
</body>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/he/1.2.0/he.min.js"></script>

<script>
const waste=document.getElementById('Money_Expense')
 const Canvas_Chart = document.getElementById('data');
 const CTX = new Chart(Canvas_Chart, {
    type: 'bar',
    data: {
        labels: [], // Empty array for labels
        datasets: [{
            label: 'Expense Data', // Label for the dataset
            data: [], // Empty array for data
            backgroundColor:[ 'rgba(54, 162, 235, 0.6)'], // Background color for the bars
            borderWidth: 1 // Border width for the bars
        }]
    },
    options: {
        plugins: {
            title: {
                display: true,
                text: 'Monthly Expenses', // Title for the chart
                font: {
                    family: 'Arial', // Font family for the title
                    size: 20, // Font size for the title
                    weight: 'bold' // Font weight for the title
                }
            }
        },
        scales: {
            y: { // Y-axis configuration
                min: 0 // Minimum value for the y-axis
                // You can also set max value if needed
            }
        }
    }
});



function getRandomColor() {
            const letters = '0123456789ABCDEF';
            let color = '#';
            for (let i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }


 const parsedData = <%- JSON.stringify(userData) %>;
const data=JSON.parse(parsedData)
// Assuming data is your parsed JSON object
let i=0;
let j=0
let expense=0;

// Initialize an object to store filtered data
const filteredData = {};
const Category=['Home','Food','Clothes','Car','Pets','Health','Travel','Gifts','EatingOut']
// Iterate through each date
Object.keys(data).forEach(date => {
  // Initialize an object to store filtered entries for the current date
  const filteredEntries = {};

  // Iterate through each category for the current date
  Object.keys(data[date]).forEach(category => {
    // Filter entries for the current category
    const filteredCategoryEntries = data[date][category].filter(entry => {
        console.log(entry)
      let parseData=JSON.parse(entry)
      // console.log(entry)
        
      for (let i = 0; i < parseData.length; i++) {
    const track = parseData[i];
    
    for (let key in track) {
        const value = track[key];
          
        let color=getRandomColor()
          if(value.length!=0){
            // console.log(value[0].cost)
              if(CTX.data.labels.length==0){
                  CTX.data.labels.push(key)
                
                  CTX.data.datasets[0].data.push(value[0].cost)
                  CTX.update()
              }
                else{
                    if(CTX.data.labels.includes(key)){
                      let indexNum=CTX.data.labels.indexOf(key)
                 
                      CTX.data.datasets[0].data[indexNum]=CTX.data.datasets[0].data[indexNum] + value[0].cost
                      CTX.update()
                    }
                    else{
                      CTX.data.labels.push(key)
                      CTX.data.datasets[0].data.push(value[0].cost)
                     
                      CTX.data.datasets[0].backgroundColor.push(color)
                      CTX.update()

                    }
                 
                  }
                }
                


            
          
          }
        }
    }
   )
   }
   )
  }
  )
    for(let i of CTX.data.datasets[0].data){
      expense+=i
    }




</script>
</html>